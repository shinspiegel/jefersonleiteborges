{"ast":null,"code":"/**\n * This will return a string with all image source sets.\n * @param {import(\"../context/initialState\").SourceSet[]} imageList\n */\nconst getImageSrcset = imageList => {\n  if (!imageList) return;\n  return imageList.map(img => `${img.image} ${img.size}w`).join(',');\n};\n\nexport default getImageSrcset;","map":{"version":3,"sources":["/home/shin/Documents/Projects/jefersonleiteborges/functions/getImageSrcset.js"],"names":["getImageSrcset","imageList","map","img","image","size","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAIC,SAAD,IAAe;AACpC,MAAI,CAACA,SAAL,EAAgB;AAEhB,SAAOA,SAAS,CAACC,GAAV,CAAeC,GAAD,IAAU,GAAEA,GAAG,CAACC,KAAM,IAAGD,GAAG,CAACE,IAAK,GAAhD,EAAoDC,IAApD,CAAyD,GAAzD,CAAP;AACD,CAJD;;AAMA,eAAeN,cAAf","sourcesContent":["/**\n * This will return a string with all image source sets.\n * @param {import(\"../context/initialState\").SourceSet[]} imageList\n */\nconst getImageSrcset = (imageList) => {\n  if (!imageList) return;\n\n  return imageList.map((img) => `${img.image} ${img.size}w`).join(',');\n};\n\nexport default getImageSrcset;\n"]},"metadata":{},"sourceType":"module"}